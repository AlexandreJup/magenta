polyphony_rnn_create_dataset \
--input=/Note_sequences/1107_piano.tfrecord \
--output_dir=/polyphony_rnn/piano_split \
--eval_ratio=0.20


polyphony_rnn_train \
--run_dir=polyphony_rnn/logdir/1000_steps_training \
--sequence_example_file=polyphony_rnn/piano_split/training_poly_tracks.tfrecord \
--hparams="batch_size=64,rnn_layer_sizes=[128,128]" \
--num_training_steps=1000 \



polyphony_rnn_generate \
--run_dir=polyphony_rnn/logdir/1000_steps_training \
--hparams="batch_size=64,rnn_layer_sizes=[64,64]" \
--bundle_file=polyphony_rnn/polyphony_rnn.mag \
--save_generator_bundle


polyphony_rnn_generate \
--bundle_file= github/magenta/polyphony_rnn/64_1000_polyphony_rnn.mag \
--output_dir=github/magenta/polyphony_rnn/generated_64 \
--num_outputs=5 \
--num_steps=128 \
--primer_midi=Midi_archives/noco.mid
--condition_on_primer=false \
--inject_primer_during_generation=true
--qpm= #vitesse


polyphony_rnn_create_dataset \
--input=piano_split/eval_poly_tracks.tfrecord \
--output_dir=/polyphony_rnn/piano_split/validation \
--eval_ratio=0.50


polyphony_rnn_train \
--run_dir=polyphony_rnn/logdir/run1 \
--sequence_example_file=polyphony_rnn/piano_split/eval_poly_tracks.tfrecord \
--hparams="batch_size=64,rnn_layer_sizes=[128,128]" \
--num_training_steps=8000 \
--eval